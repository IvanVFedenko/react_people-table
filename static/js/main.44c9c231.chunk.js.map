{"version":3,"sources":["Get.js","Person.js","PeoplesTable.js","App.js","index.js"],"names":["getFromServer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePeople","people","addedRows","wrap","_context","prev","next","fetch","concat","sent","json","map","person","objectSpread","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","pers","abrupt","stop","apply","this","arguments","Person","p","i","react_default","createElement","className","sex","length","join","PeoplesTable","peopleData","src_Person_0","key","App","state","loadedPeople","peopleTemplate","isLoaded","handleLoad","_this","setState","handleInputSearch","e","search","target","value","toLowerCase","indexOf","type","onClick","hidden","console","log","placeholder","onChange","src_PeoplesTable","React","Component","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.44c9c231.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getFromServer = async() => {\n  const responsePeople = await fetch(`${API_URL}`);\n  const people = await responsePeople.json();\n\n  const addedRows = people.map(person => ({\n    ...person,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children:\n    people\n    .filter(child => child.father === person.name\n      || child.mother === person.name)\n    .map(pers => pers.name)\n  })\n);\nreturn addedRows;\n};\n\nexport default getFromServer;\n","import React from 'react';\n\nimport './Person.css'\n\nconst Person = ({p, i}) => (\n    <tr className=\"person\">\n      <td>{i+1}</td>\n      <td className={(p.born <= 1650)\n          ? 'person-born-line'\n          : (p.died >= 1800)\n          ? 'person-bold'\n          : ''}\n      >\n            {p.name}\n      </td>\n      <td className={p.sex==='f'  ? 'person-female' : ''}>{p.sex}</td>\n      <td>{p.born}</td>\n      <td>{p.died}</td>\n      <td>{p.mother}</td>\n      <td className={p.children.length ? 'person-father' : ''}>{p.father}</td>\n      <td className={p.age > 65 ? 'person-age-greenborder' : ''}>{p.age}</td>\n      <td>{p.century}</td>\n      <td>{p.children.join(', ')}</td>\n    </tr>\n)\n\nexport default Person;\n","import React from 'react';\n\nimport Person from './Person';\nimport './PeopleTable.css'\n\nconst PeoplesTable = ({ peopleData }) => {\nreturn (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr>\n        <th>id</th>\n        <th>name</th>\n        <th>sex</th>\n        <th>born</th>\n        <th>died</th>\n        <th>mother</th>\n        <th>father</th>\n        <th>age</th>\n        <th>century</th>\n        <th>children</th>\n      </tr>\n    </thead>\n    <tbody>\n      {peopleData.map((person, i) => (\n      <Person\n        p={person}\n        i={i}\n        key={i}\n       />\n      ))}\n    </tbody>\n  </table>\n)\n}\nexport default PeoplesTable;\n","import React from 'react';\nimport getFromServer from './Get';\nimport PeoplesTable from './PeoplesTable';\nimport './app.css'\n\n\nclass App extends React.Component {\n  state = {\n    loadedPeople: [],\n    peopleTemplate: [],\n    isLoaded: false,\n};\n\nhandleLoad = async() => {\n  const addedRows = await getFromServer();\n  this.setState({\n    loadedPeople: addedRows,\n    peopleTemplate: addedRows,\n    isLoaded: true,\n  });\n};\n\nhandleInputSearch = (e) => {\n  const search = e.target.value;\n  this.setState(state => ({\n    loadedPeople: state.loadedPeople.filter(pers => pers.name.toLowerCase().indexOf(search.toLowerCase()) !== -1),\n  }));\n}\n\n render() {\n    return (\n      <div>\n        <header>\n          <h2>People table with &nbsp;\n            {this.state.isLoaded && this.state.loadedPeople.length}\n            &nbsp;rows\n          </h2>\n        </header>\n        <main>\n          <button\n            className=\"load-button\"\n            type=\"button\"\n            onClick={this.handleLoad}\n            hidden={this.state.isLoaded}\n            >\n              Load the table\n          </button>\n          {console.log(this.state.loadedPeople)}\n        <div>\n          <input placeholder=\"Search...\" onChange={this.handleInputSearch}/>\n        </div>\n          <PeoplesTable peopleData={this.state.loadedPeople} />\n        </main>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}