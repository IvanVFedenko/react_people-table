{"version":3,"sources":["Get.js","addingClassNames.js","addingClassNamesForTd.js","Person.js","PeoplesTable.js","SortPlant.js","App.js","index.js"],"names":["getFromServer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePeople","people","preparePeople","wrap","_context","prev","next","fetch","concat","sent","json","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","abrupt","stop","apply","this","arguments","addingClassNames","personDetails","selectedPersonId","className","sex","length","addingClassNamesForTd","classNameForTd","Person","handleSelect","react_default","createElement","onClick","join","PeoplesTable","state","changeSelectedPerson","_this","setState","onHandleClick","sortType","props","onHandleSortingBy","_this2","peopleData","src_Person_0","key","React","Component","direction","sortedData","SortPlant","peopleTemplate","reverse","toConsumableArray","sort","b","localeCompare","App","loadedPeople","filteringPeople","event","valueToLowerCase","target","value","toLowerCase","trim","includes","handleSortingBy","reset","addedRows","type","placeholder","onChange","src_PeoplesTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.f20cbc9d.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getFromServer = async() => {\n  const responsePeople = await fetch(`${API_URL}`);\n  const people = await responsePeople.json();\n\n  const preparePeople = people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter(child => child.father === person.name\n      || child.mother === person.name)\n      .map(child => child.name),\n  })\n  );\n  return preparePeople;\n};\n\nexport default getFromServer;\n","const addingClassNames = (personDetails, selectedPersonId) => {\n  let className = `person person__lived-in-${personDetails.century}`;\n    switch (true) {\n      case (personDetails.sex === 'f'):\n        className += \" personDetails_female\";\n        break;\n      case ((personDetails.sex === 'm') && (personDetails.children.length > 0)):\n        className += \" personDetails_father\";\n        break;\n      case ((personDetails.sex === 'f') && (personDetails.children.length > 0)):\n        className += \" personDetails_mother\";\n        break;\n    };\n\n    switch (true) {\n      case (personDetails.age > 65):\n        className += \" person__age-more-then-65\";\n        break;\n    };\n\n    switch (true) {\n      case (selectedPersonId === personDetails.id):\n        className += \" personDetails_selected\";\n        break;\n    };\n   return className;\n};\n\nexport default addingClassNames;\n","const addingClassNamesForTd = (personDetails) => {\n  let classNameForTd;\n  switch (true) {\n    case (personDetails.born < 1650):\n        classNameForTd += \" personDetails_born-before-1650\";\n      break;\n    case (personDetails.died > 1800):\n        classNameForTd += \" personDetails_died-after-1800\";\n      break;\n  };\n  return classNameForTd;\n};\n\nexport default addingClassNamesForTd;\n","import React from 'react';\nimport addingClassNames from './addingClassNames';\nimport addingClassNamesForTd from './addingClassNamesForTd';\n\nimport './Person.css';\n\nconst Person = ({ personDetails, handleSelect, selectedPersonId }) => {\n  return (\n    <tr\n      onClick={() => handleSelect(personDetails.id)}\n      className={addingClassNames(personDetails, selectedPersonId)}\n    >\n      <td>{personDetails.id}</td>\n      <td className={addingClassNamesForTd(personDetails)}>\n        {personDetails.name}\n      </td>\n      <td>{personDetails.sex}</td>\n      <td>{personDetails.born}</td>\n      <td>{personDetails.died}</td>\n      <td>{personDetails.mother}</td>\n      <td>{personDetails.father}</td>\n      <td>{personDetails.age}</td>\n      <td>{personDetails.century}</td>\n      <td>{personDetails.children.join(', ')}</td>\n    </tr>\n  );\n};\n\nexport default Person;\n","import React from 'react';\n\nimport Person from './Person';\nimport './PeopleTable.css';\n\nclass PeoplesTable extends React.Component {\n  state = {\n    selectedPersonId: null,\n  }\n\n  changeSelectedPerson = (id) => (\n    this.setState({ selectedPersonId: id })\n  );\n\n  onHandleClick = (sortType) => (\n    this.props.onHandleSortingBy(sortType)\n  );\n\n  render() {\n    const { peopleData } = this.props;\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th onClick={() => this.onHandleClick('id')}>id</th>\n            <th onClick={() => this.onHandleClick('name')}>name</th>\n            <th onClick={() => this.onHandleClick('sex')}>sex</th>\n            <th onClick={() => this.onHandleClick('born')}>born</th>\n            <th onClick={() => this.onHandleClick('died')}>died</th>\n            <th onClick={() => this.onHandleClick('mother')}>mother</th>\n            <th onClick={() => this.onHandleClick('father')}>father</th>\n            <th onClick={() => this.onHandleClick('age')}>age</th>\n            <th onClick={() => this.onHandleClick('century')}>century</th>\n            <th>children</th>\n          </tr>\n        </thead>\n        <tbody>\n          {peopleData.map(person => (\n            <Person\n              personDetails={person}\n              key={person.name}\n              handleSelect={this.changeSelectedPerson}\n              selectedPersonId={this.state.selectedPersonId}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\nexport default PeoplesTable;\n","let direction = '';\nlet sortedData = [];\n\nconst SortPlant = ({ sortType, peopleTemplate }) => {\n  if (direction === sortType) {\n    return sortedData.reverse();\n  }\n  direction = sortType;\n  sortedData = [...peopleTemplate];\n  sortedData.sort((a, b) => {\n    switch (typeof a[sortType]) {\n      case 'string':\n        return a[sortType].localeCompare(b[sortType]);\n      case 'number':\n      case 'boolean':\n        return a[sortType] - b[sortType];\n      default:\n        return 0;\n    }\n  });\n  return sortedData;\n};\n\nexport default SortPlant;\n","import React from 'react';\nimport getFromServer from './Get';\nimport PeoplesTable from './PeoplesTable';\nimport SortPlant from './SortPlant';\n\nimport './app.css';\nclass App extends React.Component {\n  state = {\n    loadedPeople: [],\n    peopleTemplate: [],\n  };\n\n  async componentDidMount() {\n    const addedRows = await getFromServer();\n    this.setState({\n      loadedPeople: [...addedRows],\n      peopleTemplate: [...addedRows],\n    });\n  }\n\nfilteringPeople = (event) => {\n  const { value } = event.target;\n  const valueToLowerCase = value.toLowerCase().trim();\n  this.setState(state => ({\n    loadedPeople: state.peopleTemplate\n      .filter((person) => {\n        if (person.name + person.mother + person !== null) {\n          return (person.name + person.mother + person.father).toLowerCase()\n            .includes(valueToLowerCase);\n        }\n      }),\n  }));\n};\n\nhandleSortingBy = (sortType) => {\n  this.setState({\n    sortType,\n  });\n  this.setState(state => ({\n    loadedPeople: SortPlant(state),\n  }));\n};\n\nreset = () => {\n  this.setState(state => ({\n    loadedPeople: state.peopleTemplate,\n  }));\n};\n\nrender() {\n  return (\n    <div>\n      <header>\n        <h2>People table with {' '}\n          {this.state.loadedPeople.length}\n          {' '}rows\n        </h2>\n        </header>\n      <main>\n        <div>\n          <label>\n            <input\n              type=\"text\"\n              placeholder=\"Search by name...\"\n              onChange={this.filteringPeople}\n              className=\"app_search-input\"\n            />\n          </label>\n\n          <button\n            onClick={this.reset}\n            type=\"reset\"\n            className=\"app_sort-button\"\n          >\n                  RESET\n          </button>\n        </div>\n        <PeoplesTable\n          peopleData={this.state.loadedPeople}\n          onHandleSortingBy={this.handleSortingBy}\n        />\n      </main>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}