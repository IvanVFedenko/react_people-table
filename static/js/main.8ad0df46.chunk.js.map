{"version":3,"sources":["Get.js","addingClassNames.js","addingClassNamesForTd.js","Person.js","PeoplesTable.js","SortPlant.js","App.js","index.js"],"names":["getFromServer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePeople","people","addedRows","wrap","_context","prev","next","fetch","concat","sent","json","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","pers","abrupt","stop","apply","this","arguments","addingClassNames","personDetails","selectedPersonId","className","sex","length","addingClassNamesForTd","classNameForTd","Person","handleSelect","react_default","createElement","onClick","join","PeoplesTable","state","changeSelectedPerson","_this","setState","_this2","peopleData","props","src_Person_0","key","React","Component","SortPlant","sortType","peopleTemplate","sortedData","toConsumableArray","sort","b","localeCompare","App","loadedPeople","isLoaded","handleLoad","handleInputSearch","e","search","target","value","toLowerCase","indexOf","handleSortingBy","reset","type","hidden","placeholder","onChange","src_PeoplesTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.8ad0df46.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getFromServer = async() => {\n  const responsePeople = await fetch(`${API_URL}`);\n  const people = await responsePeople.json();\n\n  const addedRows = people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n    .filter(child => child.father === person.name\n    || child.mother === person.name)\n    .map(pers => pers.name)\n  })\n);\nreturn addedRows;\n};\n\nexport default getFromServer;\n","const addingClassNames = (personDetails, selectedPersonId) => {\n  let className = `person person__lived-in-${personDetails.century}`;\n    switch (true) {\n      case (personDetails.sex === 'f'):\n        className += \" personDetails_female\";\n        break;\n      case ((personDetails.sex === 'm') && (personDetails.children.length > 0)):\n        className += \" personDetails_father\";\n        break;\n      case ((personDetails.sex === 'f') && (personDetails.children.length > 0)):\n        className += \" personDetails_mother\";\n        break;\n    };\n\n    switch (true) {\n      case (personDetails.age > 65):\n        className += \" person__age-more-then-65\";\n        break;\n    };\n\n    switch (true) {\n      case (selectedPersonId === personDetails.id):\n        className += \" personDetails_selected\";\n        break;\n    };\n   return className;\n};\n\nexport default addingClassNames;\n","const addingClassNamesForTd = (personDetails) => {\n  let classNameForTd;\n  switch (true) {\n    case (personDetails.born < 1650):\n        classNameForTd += \" personDetails_born-before-1650\";\n      break;\n    case (personDetails.died > 1800):\n        classNameForTd += \" personDetails_died-after-1800\";\n      break;\n  };\n  return classNameForTd;\n};\n\nexport default addingClassNamesForTd;\n","import React from 'react';\nimport addingClassNames from './addingClassNames';\nimport addingClassNamesForTd from './addingClassNamesForTd';\n\nimport './Person.css'\n\nconst Person = ({personDetails, handleSelect, selectedPersonId}) => {\n  return (\n    <tr\n      onClick={() => handleSelect(personDetails.id)}\n      className={addingClassNames(personDetails, selectedPersonId)}>\n      <td>{personDetails.id}</td>\n      <td className={addingClassNamesForTd(personDetails)}>\n        {personDetails.name}\n      </td>\n      <td>{personDetails.sex}</td>\n      <td>{personDetails.born}</td>\n      <td>{personDetails.died}</td>\n      <td>{personDetails.mother}</td>\n      <td>{personDetails.father}</td>\n      <td>{personDetails.age}</td>\n      <td>{personDetails.century}</td>\n      <td>{personDetails.children.join(', ')}</td>\n    </tr>\n  )\n};\n\n\nexport default Person;\n","import React from 'react';\n\nimport Person from './Person';\nimport './PeopleTable.css'\n\nclass PeoplesTable extends React.Component  {\n  state = {\n    selectedPersonId: null,\n  }\n\n  changeSelectedPerson = (id) => {\n    this.setState({selectedPersonId: id})\n  }\n  render () {\n    const {peopleData} = this.props;\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th>id</th>\n            <th>name</th>\n            <th>sex</th>\n            <th>born</th>\n            <th>died</th>\n            <th>mother</th>\n            <th>father</th>\n            <th>age</th>\n            <th>century</th>\n            <th>children</th>\n          </tr>\n        </thead>\n        <tbody>\n          {peopleData.map((person) => (\n          <Person\n            personDetails={person}\n            key={person.name}\n            handleSelect={this.changeSelectedPerson }\n            selectedPersonId={this.state.selectedPersonId}\n          />\n          ))}\n        </tbody>\n      </table>\n      );\n    }\n}\nexport default PeoplesTable;\n","const SortPlant = ({ sortType, peopleTemplate }) => {\n  let sortedData = [...peopleTemplate];\n  sortedData.sort((a, b) => {\n    switch (typeof a[sortType]) {\n      case 'string':\n        return a[sortType].localeCompare(b[sortType]);\n      case 'number':\n      case 'boolean':\n        return a[sortType] - b[sortType];\n      default:\n      return 0;\n    }\n  });\n   return sortedData;\n};\n\nexport default SortPlant;\n","import React from 'react';\nimport getFromServer from './Get';\nimport PeoplesTable from './PeoplesTable';\nimport SortPlant from './SortPlant';\nimport './app.css'\nclass App extends React.Component {\n  state = {\n    loadedPeople: [],\n    peopleTemplate: [],\n    isLoaded: false,\n};\n\nhandleLoad = async() => {\n  const addedRows = await getFromServer();\n  this.setState({\n    loadedPeople: [...addedRows],\n    peopleTemplate: [...addedRows],\n    isLoaded: true,\n  });\n};\n\nhandleInputSearch = (e) => {\n  const search = e.target.value;\n  this.setState (state => ({\n    loadedPeople: state.loadedPeople\n    .filter(pers => pers.name\n      .toLowerCase()\n      .indexOf(search.toLowerCase()) !== -1),\n  }));\n};\n\nhandleSortingBy = (sortType) => {\n  this.setState({\n    sortType,\n  });\n  this.setState (state => ({\n    loadedPeople: SortPlant(state),\n  }));\n};\n\nreset = () => {\n  this.setState (state => ({\n    loadedPeople: state.peopleTemplate,\n  }));\n};\n\n render() {\n    return (\n      <div>\n        <header>\n          <h2>People table with &nbsp;\n            {this.state.isLoaded && this.state.loadedPeople.length}\n            &nbsp;rows\n          </h2>\n        </header>\n        <main>\n          <button\n            className=\"app_load-button\"\n            type=\"button\"\n            onClick={this.handleLoad}\n            hidden={this.state.isLoaded}\n            >\n              Load the table\n          </button>\n        <div>\n        <form>\n          <input\n            placeholder=\"Search...\"\n            onChange={this.handleInputSearch}\n            className=\"app_search-input\"\n          />\n          <button\n            onClick={this.reset}\n            type=\"reset\"\n            className=\"app_sort-button\"\n          >\n              RESET\n          </button>\n          </form>\n        </div>\n          <button\n            onClick = {() => this.handleSortingBy('name')}\n            className=\"app_sort-button\"\n            type=\"button\"\n            >\n              sort by name\n          </button>\n          <button\n            onClick = {() => this.handleSortingBy('id')}\n            className=\"app_sort-button\"\n            type=\"button\"\n            >\n             sort by ID\n          </button>\n          <button\n            onClick = {() => this.handleSortingBy('born')}\n            className=\"app_sort-button\"\n            type=\"button\"\n            >\n             sort by born\n          </button>\n          <button\n            onClick = {() => this.handleSortingBy('died')}\n            className=\"app_sort-button\"\n            type=\"button\"\n           >\n             sort by died\n          </button>\n          <button\n            onClick = {() => this.handleSortingBy('age')}\n            className=\"app_sort-button\"\n            type=\"button\"\n           >\n             sort by age\n          </button>\n          <PeoplesTable peopleData={this.state.loadedPeople} />\n        </main>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}