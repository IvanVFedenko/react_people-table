{"version":3,"sources":["Get.js","addingClassNames.js","addingClassNamesForTd.js","Person.js","PeoplesTable.js","SortPlant.js","App.js","index.js"],"names":["getFromServer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePeople","people","addedRows","wrap","_context","prev","next","fetch","concat","sent","json","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","pers","abrupt","stop","apply","this","arguments","addingClassNames","personDetails","className","sex","length","addingClassNamesForTd","classNameForTd","Person","react_default","createElement","join","PeoplesTable","peopleData","src_Person_0","key","SortPlant","sortType","peopleTemplate","sortedData","toConsumableArray","sort","b","localeCompare","App","state","loadedPeople","isLoaded","handleLoad","_this","setState","handleInputSearch","e","search","target","value","toLowerCase","indexOf","handleSortingBy","reset","_this2","type","onClick","hidden","console","log","placeholder","onChange","src_PeoplesTable","React","Component","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.627a8fc0.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getFromServer = async() => {\n  const responsePeople = await fetch(`${API_URL}`);\n  const people = await responsePeople.json();\n\n  const addedRows = people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n    .filter(child => child.father === person.name\n    || child.mother === person.name)\n    .map(pers => pers.name)\n  })\n);\nreturn addedRows;\n};\n\nexport default getFromServer;\n","const addingClassNames = (personDetails) => {\n  let className = `person person__lived-in-${personDetails.century}`;\n    switch (true) {\n      case (personDetails.sex === 'f'):\n        className += \" personDetails_female\";\n        break;\n      case ((personDetails.sex === 'm') && (personDetails.children.length > 0)):\n        className += \" personDetails_father\";\n        break;\n      case ((personDetails.sex === 'f') && (personDetails.children.length > 0)):\n        className += \" personDetails_mother\";\n        break;\n    };\n\n    switch (true) {\n      case (personDetails.age > 65):\n        className += \" person__age-more-then-65\";\n        break;\n    };\n   return className;\n};\n\nexport default addingClassNames;\n","const addingClassNamesForTd = (personDetails) => {\n  let classNameForTd;\n  switch (true) {\n    case (personDetails.born < 1650):\n        classNameForTd += \" personDetails_born-before-1650\";\n      break;\n    case (personDetails.died > 1800):\n        classNameForTd += \" personDetails_died-after-1800\";\n      break;\n  };\n  return classNameForTd;\n};\n\nexport default addingClassNamesForTd;\n","import React from 'react';\nimport addingClassNames from './addingClassNames';\nimport addingClassNamesForTd from './addingClassNamesForTd';\n\nimport './Person.css'\n\nconst Person = ({ personDetails }) => (\n  <tr className={addingClassNames(personDetails)}>\n    <td>{personDetails.id}</td>\n    <td className={addingClassNamesForTd(personDetails)}>\n      {personDetails.name}\n    </td>\n    <td>{personDetails.sex}</td>\n    <td>{personDetails.born}</td>\n    <td>{personDetails.died}</td>\n    <td>{personDetails.mother}</td>\n    <td>{personDetails.father}</td>\n    <td>{personDetails.age}</td>\n    <td>{personDetails.century}</td>\n    <td>{personDetails.children.join(', ')}</td>\n  </tr>\n);\n\nexport default Person;\n","import React from 'react';\n\nimport Person from './Person';\nimport './PeopleTable.css'\n\nconst PeoplesTable = ({ peopleData }) => {\nreturn (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr>\n        <th>id</th>\n        <th>name</th>\n        <th>sex</th>\n        <th>born</th>\n        <th>died</th>\n        <th>mother</th>\n        <th>father</th>\n        <th>age</th>\n        <th>century</th>\n        <th>children</th>\n      </tr>\n    </thead>\n    <tbody>\n      {peopleData.map((person) => (\n      <Person\n       personDetails={person}\n        key={person.name}\n       />\n      ))}\n    </tbody>\n  </table>\n  );\n}\nexport default PeoplesTable;\n","const SortPlant = ({ sortType, peopleTemplate }) => {\n  let sortedData = [...peopleTemplate];\n  sortedData.sort((a, b) => {\n    switch (typeof a[sortType]) {\n      case 'string':\n        return a[sortType].localeCompare(b[sortType]);\n      case 'number':\n      case 'boolean':\n        return a[sortType] - b[sortType];\n      default:\n      return 0;\n    }\n  });\n   return sortedData;\n};\n\nexport default SortPlant;\n","import React from 'react';\nimport getFromServer from './Get';\nimport PeoplesTable from './PeoplesTable';\nimport SortPlant from './SortPlant';\nimport './app.css'\nclass App extends React.Component {\n  state = {\n    loadedPeople: [],\n    peopleTemplate: [],\n    isLoaded: false,\n};\n\nhandleLoad = async() => {\n  const addedRows = await getFromServer();\n  this.setState({\n    loadedPeople: [...addedRows],\n    peopleTemplate: [...addedRows],\n    isLoaded: true,\n  });\n};\n\nhandleInputSearch = (e) => {\n  const search = e.target.value;\n  this.setState (state => ({\n    loadedPeople: state.loadedPeople\n    .filter(pers => pers.name\n      .toLowerCase()\n      .indexOf(search.toLowerCase()) !== -1),\n  }));\n};\n\nhandleSortingBy = (sortType) => {\n  this.setState({\n    sortType,\n  });\n  this.setState (state => ({\n    loadedPeople: SortPlant(state),\n  }));\n};\n\nreset = () => {\n  this.setState (state => ({\n    loadedPeople: state.peopleTemplate,\n  }));\n};\n\n render() {\n    return (\n      <div>\n        <header>\n          <h2>People table with &nbsp;\n            {this.state.isLoaded && this.state.loadedPeople.length}\n            &nbsp;rows\n          </h2>\n        </header>\n        <main>\n          <button\n            className=\"app_load-button\"\n            type=\"button\"\n            onClick={this.handleLoad}\n            hidden={this.state.isLoaded}\n            >\n              Load the table\n          </button>\n          {console.log(this.state.loadedPeople)}\n        <div>\n        <form>\n          <input\n            placeholder=\"Search...\"\n            onChange={this.handleInputSearch}\n            className=\"app_search-input\"\n          />\n          <button\n            onClick={this.reset}\n            type=\"reset\"\n            className=\"app_sort-button\"\n          >\n              RESET\n          </button>\n          </form>\n        </div>\n          <button\n            onClick = {() => this.handleSortingBy('name')}\n            className=\"app_sort-button\"\n            type=\"button\"\n            >\n              sort by name\n          </button>\n          <button\n            onClick = {() => this.handleSortingBy('id')}\n            className=\"app_sort-button\"\n            type=\"button\"\n            >\n             sort by ID\n          </button>\n          <button\n            onClick = {() => this.handleSortingBy('born')}\n            className=\"app_sort-button\"\n            type=\"button\"\n            >\n             sort by born\n          </button>\n          <button\n            onClick = {() => this.handleSortingBy('died')}\n            className=\"app_sort-button\"\n            type=\"button\"\n           >\n             sort by died\n          </button>\n          <button\n            onClick = {() => this.handleSortingBy('age')}\n            className=\"app_sort-button\"\n            type=\"button\"\n           >\n             sort by age\n          </button>\n          <PeoplesTable peopleData={this.state.loadedPeople} />\n        </main>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}